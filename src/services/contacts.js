// üìÅ src/services/contacts.js

import fs from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';
import { Contact } from '../models/Contact.js';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// üîπ –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏
export const getAllContacts = async () => {
  return await Contact.find();
};

// üîπ –û—Ç—Ä–∏–º–∞—Ç–∏ –æ–¥–∏–Ω –∫–æ–Ω—Ç–∞–∫—Ç –∑–∞ ID
export const getContactById = async (id) => {
  return await Contact.findById(id);
};

// üîπ –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–∞–∫—Ç
export const createContact = async (data) => {
  return await Contact.create(data);
};

// üîπ –û–Ω–æ–≤–∏—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç
export const updateContactById = async (id, data) => {
  return await Contact.findByIdAndUpdate(id, data, { new: true });
};

// üîπ –í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç
export const deleteContactById = async (id) => {
  return await Contact.findByIdAndDelete(id);
};

// üîπ –Ü–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –∑ JSON –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ, —è–∫—â–æ –∫–æ–ª–µ–∫—Ü—ñ—è –ø–æ—Ä–æ–∂–Ω—è
export const seedContactsIfEmpty = async () => {
  const count = await Contact.countDocuments();

  if (count === 0) {
    const filePath = path.join(__dirname, '../../data/contacts.json');
    const data = await fs.readFile(filePath, 'utf-8');
    const contacts = JSON.parse(data);
    await Contact.insertMany(contacts);
    console.log('‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç–∏ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω—ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ!');
  } else {
    console.log('üìå –ö–æ–Ω—Ç–∞–∫—Ç–∏ –≤–∂–µ —ñ—Å–Ω—É—é—Ç—å, —ñ–º–ø–æ—Ä—Ç –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω');
  }
};
